name: Windows Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-windows:
    runs-on: windows-latest
    env:
      QT_VERSION: 6.2.0

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Qt ${{ env.QT_VERSION }} (MSVC 2019)
      uses: jurplel/install-qt-action@v4
      with:
        version: ${{ env.QT_VERSION }}
        arch: win64_msvc2019_64
        cache: true

    - name: Setup MSVC environment
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x64

    - name: Configure CMake
      run: |
        # 直接在这里构造QT_PREFIX路径，而不是在env中定义
        $qtPrefix = "${{ github.workspace }}\Qt\${{ env.QT_VERSION }}\msvc2019_64"
        cmake -B build -G "Visual Studio 17 2022" -A x64 `
          -DCMAKE_PREFIX_PATH="$qtPrefix" `
          -DCMAKE_BUILD_TYPE=Release

    - name: Build project
      run: cmake --build build --config Release --parallel 2

    - name: Collect binaries
      run: |
        $qtPrefix = "${{ github.workspace }}\Qt\${{ env.QT_VERSION }}\msvc2019_64"
        mkdir release-bin
        copy build\Release\glinf.exe release-bin\
        copy "${QT_ROOT_DIR}\bin\Qt6Core.dll" release-bin\
        copy "${QT_ROOT_DIR}\bin\Qt6Gui.dll" release-bin\
        copy "${QT_ROOT_DIR}\bin\Qt6OpenGL.dll" release-bin\
        copy "${QT_ROOT_DIR}\bin\opengl32sw.dll" release-bin\
        7z a release-bin.zip release-bin\

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Windows-binaries
        path: release-bin.zip
